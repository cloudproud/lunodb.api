// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: kit/plan/plan.proto

package plan

import (
	fmt "fmt"
	node "github.com/cloudproud/lunodb.pb/kit/node"
	types "github.com/cloudproud/lunodb.pb/kit/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Logical struct {
	Columns              []*Expression     `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	From                 *From             `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Filter               *FilterExpression `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Aggregation          *Aggregation      `protobuf:"bytes,4,opt,name=aggregation,proto3" json:"aggregation,omitempty"`
	OrderBy              *OrderBy          `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Logical) Reset()         { *m = Logical{} }
func (m *Logical) String() string { return proto.CompactTextString(m) }
func (*Logical) ProtoMessage()    {}
func (*Logical) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{0}
}
func (m *Logical) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Logical.Unmarshal(m, b)
}
func (m *Logical) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Logical.Marshal(b, m, deterministic)
}
func (m *Logical) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Logical.Merge(m, src)
}
func (m *Logical) XXX_Size() int {
	return xxx_messageInfo_Logical.Size(m)
}
func (m *Logical) XXX_DiscardUnknown() {
	xxx_messageInfo_Logical.DiscardUnknown(m)
}

var xxx_messageInfo_Logical proto.InternalMessageInfo

func (m *Logical) GetColumns() []*Expression {
	if m != nil {
		return m.Columns
	}
	return nil
}

func (m *Logical) GetFrom() *From {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *Logical) GetFilter() *FilterExpression {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *Logical) GetAggregation() *Aggregation {
	if m != nil {
		return m.Aggregation
	}
	return nil
}

func (m *Logical) GetOrderBy() *OrderBy {
	if m != nil {
		return m.OrderBy
	}
	return nil
}

type From struct {
	Table                string   `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Schema               string   `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *From) Reset()         { *m = From{} }
func (m *From) String() string { return proto.CompactTextString(m) }
func (*From) ProtoMessage()    {}
func (*From) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{1}
}
func (m *From) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_From.Unmarshal(m, b)
}
func (m *From) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_From.Marshal(b, m, deterministic)
}
func (m *From) XXX_Merge(src proto.Message) {
	xxx_messageInfo_From.Merge(m, src)
}
func (m *From) XXX_Size() int {
	return xxx_messageInfo_From.Size(m)
}
func (m *From) XXX_DiscardUnknown() {
	xxx_messageInfo_From.DiscardUnknown(m)
}

var xxx_messageInfo_From proto.InternalMessageInfo

func (m *From) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *From) GetSchema() string {
	if m != nil {
		return m.Schema
	}
	return ""
}

type Expression struct {
	// Types that are valid to be assigned to Statement:
	//
	//	*Expression_Column
	//	*Expression_Function
	//	*Expression_BinaryExpression
	//	*Expression_Constant
	//	*Expression_Tuple
	//	*Expression_Variable
	//	*Expression_Parameter
	//	*Expression_CastExpression
	Statement            isExpression_Statement `protobuf_oneof:"statement"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Expression) Reset()         { *m = Expression{} }
func (m *Expression) String() string { return proto.CompactTextString(m) }
func (*Expression) ProtoMessage()    {}
func (*Expression) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{2}
}
func (m *Expression) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Expression.Unmarshal(m, b)
}
func (m *Expression) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Expression.Marshal(b, m, deterministic)
}
func (m *Expression) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Expression.Merge(m, src)
}
func (m *Expression) XXX_Size() int {
	return xxx_messageInfo_Expression.Size(m)
}
func (m *Expression) XXX_DiscardUnknown() {
	xxx_messageInfo_Expression.DiscardUnknown(m)
}

var xxx_messageInfo_Expression proto.InternalMessageInfo

type isExpression_Statement interface {
	isExpression_Statement()
}

type Expression_Column struct {
	Column *Column `protobuf:"bytes,1,opt,name=column,proto3,oneof" json:"column,omitempty"`
}
type Expression_Function struct {
	Function *Function `protobuf:"bytes,2,opt,name=function,proto3,oneof" json:"function,omitempty"`
}
type Expression_BinaryExpression struct {
	BinaryExpression *BinaryExpression `protobuf:"bytes,3,opt,name=binary_expression,json=binaryExpression,proto3,oneof" json:"binary_expression,omitempty"`
}
type Expression_Constant struct {
	Constant *Constant `protobuf:"bytes,4,opt,name=constant,proto3,oneof" json:"constant,omitempty"`
}
type Expression_Tuple struct {
	Tuple *Tuple `protobuf:"bytes,5,opt,name=tuple,proto3,oneof" json:"tuple,omitempty"`
}
type Expression_Variable struct {
	Variable *VariableExpression `protobuf:"bytes,6,opt,name=variable,proto3,oneof" json:"variable,omitempty"`
}
type Expression_Parameter struct {
	Parameter *Parameter `protobuf:"bytes,7,opt,name=parameter,proto3,oneof" json:"parameter,omitempty"`
}
type Expression_CastExpression struct {
	CastExpression *CastExpression `protobuf:"bytes,8,opt,name=cast_expression,json=castExpression,proto3,oneof" json:"cast_expression,omitempty"`
}

func (*Expression_Column) isExpression_Statement()           {}
func (*Expression_Function) isExpression_Statement()         {}
func (*Expression_BinaryExpression) isExpression_Statement() {}
func (*Expression_Constant) isExpression_Statement()         {}
func (*Expression_Tuple) isExpression_Statement()            {}
func (*Expression_Variable) isExpression_Statement()         {}
func (*Expression_Parameter) isExpression_Statement()        {}
func (*Expression_CastExpression) isExpression_Statement()   {}

func (m *Expression) GetStatement() isExpression_Statement {
	if m != nil {
		return m.Statement
	}
	return nil
}

func (m *Expression) GetColumn() *Column {
	if x, ok := m.GetStatement().(*Expression_Column); ok {
		return x.Column
	}
	return nil
}

func (m *Expression) GetFunction() *Function {
	if x, ok := m.GetStatement().(*Expression_Function); ok {
		return x.Function
	}
	return nil
}

func (m *Expression) GetBinaryExpression() *BinaryExpression {
	if x, ok := m.GetStatement().(*Expression_BinaryExpression); ok {
		return x.BinaryExpression
	}
	return nil
}

func (m *Expression) GetConstant() *Constant {
	if x, ok := m.GetStatement().(*Expression_Constant); ok {
		return x.Constant
	}
	return nil
}

func (m *Expression) GetTuple() *Tuple {
	if x, ok := m.GetStatement().(*Expression_Tuple); ok {
		return x.Tuple
	}
	return nil
}

func (m *Expression) GetVariable() *VariableExpression {
	if x, ok := m.GetStatement().(*Expression_Variable); ok {
		return x.Variable
	}
	return nil
}

func (m *Expression) GetParameter() *Parameter {
	if x, ok := m.GetStatement().(*Expression_Parameter); ok {
		return x.Parameter
	}
	return nil
}

func (m *Expression) GetCastExpression() *CastExpression {
	if x, ok := m.GetStatement().(*Expression_CastExpression); ok {
		return x.CastExpression
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Expression) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Expression_Column)(nil),
		(*Expression_Function)(nil),
		(*Expression_BinaryExpression)(nil),
		(*Expression_Constant)(nil),
		(*Expression_Tuple)(nil),
		(*Expression_Variable)(nil),
		(*Expression_Parameter)(nil),
		(*Expression_CastExpression)(nil),
	}
}

type Column struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Table                string   `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Schema               string   `protobuf:"bytes,3,opt,name=schema,proto3" json:"schema,omitempty"`
	Catalog              string   `protobuf:"bytes,4,opt,name=catalog,proto3" json:"catalog,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Column) Reset()         { *m = Column{} }
func (m *Column) String() string { return proto.CompactTextString(m) }
func (*Column) ProtoMessage()    {}
func (*Column) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{3}
}
func (m *Column) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Column.Unmarshal(m, b)
}
func (m *Column) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Column.Marshal(b, m, deterministic)
}
func (m *Column) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Column.Merge(m, src)
}
func (m *Column) XXX_Size() int {
	return xxx_messageInfo_Column.Size(m)
}
func (m *Column) XXX_DiscardUnknown() {
	xxx_messageInfo_Column.DiscardUnknown(m)
}

var xxx_messageInfo_Column proto.InternalMessageInfo

func (m *Column) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Column) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *Column) GetSchema() string {
	if m != nil {
		return m.Schema
	}
	return ""
}

func (m *Column) GetCatalog() string {
	if m != nil {
		return m.Catalog
	}
	return ""
}

type FilterExpression struct {
	// Types that are valid to be assigned to Condition:
	//
	//	*FilterExpression_Column
	//	*FilterExpression_Function
	//	*FilterExpression_BinaryExpression
	//	*FilterExpression_Constant
	//	*FilterExpression_Tuple
	//	*FilterExpression_Variable
	//	*FilterExpression_Parameter
	//	*FilterExpression_CastExpression
	//	*FilterExpression_AndExpression
	//	*FilterExpression_OrExpression
	//	*FilterExpression_ComparisonExpression
	Condition            isFilterExpression_Condition `protobuf_oneof:"condition"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *FilterExpression) Reset()         { *m = FilterExpression{} }
func (m *FilterExpression) String() string { return proto.CompactTextString(m) }
func (*FilterExpression) ProtoMessage()    {}
func (*FilterExpression) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{4}
}
func (m *FilterExpression) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterExpression.Unmarshal(m, b)
}
func (m *FilterExpression) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterExpression.Marshal(b, m, deterministic)
}
func (m *FilterExpression) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterExpression.Merge(m, src)
}
func (m *FilterExpression) XXX_Size() int {
	return xxx_messageInfo_FilterExpression.Size(m)
}
func (m *FilterExpression) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterExpression.DiscardUnknown(m)
}

var xxx_messageInfo_FilterExpression proto.InternalMessageInfo

type isFilterExpression_Condition interface {
	isFilterExpression_Condition()
}

type FilterExpression_Column struct {
	Column *Column `protobuf:"bytes,1,opt,name=column,proto3,oneof" json:"column,omitempty"`
}
type FilterExpression_Function struct {
	Function *Function `protobuf:"bytes,2,opt,name=function,proto3,oneof" json:"function,omitempty"`
}
type FilterExpression_BinaryExpression struct {
	BinaryExpression *BinaryExpression `protobuf:"bytes,3,opt,name=binary_expression,json=binaryExpression,proto3,oneof" json:"binary_expression,omitempty"`
}
type FilterExpression_Constant struct {
	Constant *Constant `protobuf:"bytes,4,opt,name=constant,proto3,oneof" json:"constant,omitempty"`
}
type FilterExpression_Tuple struct {
	Tuple *Tuple `protobuf:"bytes,5,opt,name=tuple,proto3,oneof" json:"tuple,omitempty"`
}
type FilterExpression_Variable struct {
	Variable *VariableExpression `protobuf:"bytes,6,opt,name=variable,proto3,oneof" json:"variable,omitempty"`
}
type FilterExpression_Parameter struct {
	Parameter *Parameter `protobuf:"bytes,7,opt,name=parameter,proto3,oneof" json:"parameter,omitempty"`
}
type FilterExpression_CastExpression struct {
	CastExpression *CastExpression `protobuf:"bytes,8,opt,name=cast_expression,json=castExpression,proto3,oneof" json:"cast_expression,omitempty"`
}
type FilterExpression_AndExpression struct {
	AndExpression *AndExpression `protobuf:"bytes,9,opt,name=and_expression,json=andExpression,proto3,oneof" json:"and_expression,omitempty"`
}
type FilterExpression_OrExpression struct {
	OrExpression *OrExpression `protobuf:"bytes,10,opt,name=or_expression,json=orExpression,proto3,oneof" json:"or_expression,omitempty"`
}
type FilterExpression_ComparisonExpression struct {
	ComparisonExpression *ComparisonExpression `protobuf:"bytes,11,opt,name=comparison_expression,json=comparisonExpression,proto3,oneof" json:"comparison_expression,omitempty"`
}

func (*FilterExpression_Column) isFilterExpression_Condition()               {}
func (*FilterExpression_Function) isFilterExpression_Condition()             {}
func (*FilterExpression_BinaryExpression) isFilterExpression_Condition()     {}
func (*FilterExpression_Constant) isFilterExpression_Condition()             {}
func (*FilterExpression_Tuple) isFilterExpression_Condition()                {}
func (*FilterExpression_Variable) isFilterExpression_Condition()             {}
func (*FilterExpression_Parameter) isFilterExpression_Condition()            {}
func (*FilterExpression_CastExpression) isFilterExpression_Condition()       {}
func (*FilterExpression_AndExpression) isFilterExpression_Condition()        {}
func (*FilterExpression_OrExpression) isFilterExpression_Condition()         {}
func (*FilterExpression_ComparisonExpression) isFilterExpression_Condition() {}

func (m *FilterExpression) GetCondition() isFilterExpression_Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *FilterExpression) GetColumn() *Column {
	if x, ok := m.GetCondition().(*FilterExpression_Column); ok {
		return x.Column
	}
	return nil
}

func (m *FilterExpression) GetFunction() *Function {
	if x, ok := m.GetCondition().(*FilterExpression_Function); ok {
		return x.Function
	}
	return nil
}

func (m *FilterExpression) GetBinaryExpression() *BinaryExpression {
	if x, ok := m.GetCondition().(*FilterExpression_BinaryExpression); ok {
		return x.BinaryExpression
	}
	return nil
}

func (m *FilterExpression) GetConstant() *Constant {
	if x, ok := m.GetCondition().(*FilterExpression_Constant); ok {
		return x.Constant
	}
	return nil
}

func (m *FilterExpression) GetTuple() *Tuple {
	if x, ok := m.GetCondition().(*FilterExpression_Tuple); ok {
		return x.Tuple
	}
	return nil
}

func (m *FilterExpression) GetVariable() *VariableExpression {
	if x, ok := m.GetCondition().(*FilterExpression_Variable); ok {
		return x.Variable
	}
	return nil
}

func (m *FilterExpression) GetParameter() *Parameter {
	if x, ok := m.GetCondition().(*FilterExpression_Parameter); ok {
		return x.Parameter
	}
	return nil
}

func (m *FilterExpression) GetCastExpression() *CastExpression {
	if x, ok := m.GetCondition().(*FilterExpression_CastExpression); ok {
		return x.CastExpression
	}
	return nil
}

func (m *FilterExpression) GetAndExpression() *AndExpression {
	if x, ok := m.GetCondition().(*FilterExpression_AndExpression); ok {
		return x.AndExpression
	}
	return nil
}

func (m *FilterExpression) GetOrExpression() *OrExpression {
	if x, ok := m.GetCondition().(*FilterExpression_OrExpression); ok {
		return x.OrExpression
	}
	return nil
}

func (m *FilterExpression) GetComparisonExpression() *ComparisonExpression {
	if x, ok := m.GetCondition().(*FilterExpression_ComparisonExpression); ok {
		return x.ComparisonExpression
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FilterExpression) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FilterExpression_Column)(nil),
		(*FilterExpression_Function)(nil),
		(*FilterExpression_BinaryExpression)(nil),
		(*FilterExpression_Constant)(nil),
		(*FilterExpression_Tuple)(nil),
		(*FilterExpression_Variable)(nil),
		(*FilterExpression_Parameter)(nil),
		(*FilterExpression_CastExpression)(nil),
		(*FilterExpression_AndExpression)(nil),
		(*FilterExpression_OrExpression)(nil),
		(*FilterExpression_ComparisonExpression)(nil),
	}
}

type Function struct {
	Expressions          []*Expression `protobuf:"bytes,1,rep,name=expressions,proto3" json:"expressions,omitempty"`
	Name                 string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Distinct             bool          `protobuf:"varint,3,opt,name=distinct,proto3" json:"distinct,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Function) Reset()         { *m = Function{} }
func (m *Function) String() string { return proto.CompactTextString(m) }
func (*Function) ProtoMessage()    {}
func (*Function) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{5}
}
func (m *Function) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Function.Unmarshal(m, b)
}
func (m *Function) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Function.Marshal(b, m, deterministic)
}
func (m *Function) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Function.Merge(m, src)
}
func (m *Function) XXX_Size() int {
	return xxx_messageInfo_Function.Size(m)
}
func (m *Function) XXX_DiscardUnknown() {
	xxx_messageInfo_Function.DiscardUnknown(m)
}

var xxx_messageInfo_Function proto.InternalMessageInfo

func (m *Function) GetExpressions() []*Expression {
	if m != nil {
		return m.Expressions
	}
	return nil
}

func (m *Function) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Function) GetDistinct() bool {
	if m != nil {
		return m.Distinct
	}
	return false
}

type Aggregation struct {
	GroupBy              []*Expression `protobuf:"bytes,1,rep,name=group_by,json=groupBy,proto3" json:"group_by,omitempty"`
	Having               *Expression   `protobuf:"bytes,2,opt,name=having,proto3" json:"having,omitempty"`
	Expressions          []*Expression `protobuf:"bytes,3,rep,name=expressions,proto3" json:"expressions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Aggregation) Reset()         { *m = Aggregation{} }
func (m *Aggregation) String() string { return proto.CompactTextString(m) }
func (*Aggregation) ProtoMessage()    {}
func (*Aggregation) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{6}
}
func (m *Aggregation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Aggregation.Unmarshal(m, b)
}
func (m *Aggregation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Aggregation.Marshal(b, m, deterministic)
}
func (m *Aggregation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Aggregation.Merge(m, src)
}
func (m *Aggregation) XXX_Size() int {
	return xxx_messageInfo_Aggregation.Size(m)
}
func (m *Aggregation) XXX_DiscardUnknown() {
	xxx_messageInfo_Aggregation.DiscardUnknown(m)
}

var xxx_messageInfo_Aggregation proto.InternalMessageInfo

func (m *Aggregation) GetGroupBy() []*Expression {
	if m != nil {
		return m.GroupBy
	}
	return nil
}

func (m *Aggregation) GetHaving() *Expression {
	if m != nil {
		return m.Having
	}
	return nil
}

func (m *Aggregation) GetExpressions() []*Expression {
	if m != nil {
		return m.Expressions
	}
	return nil
}

type AndExpression struct {
	Left                 *FilterExpression `protobuf:"bytes,1,opt,name=left,proto3" json:"left,omitempty"`
	Right                *FilterExpression `protobuf:"bytes,2,opt,name=right,proto3" json:"right,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AndExpression) Reset()         { *m = AndExpression{} }
func (m *AndExpression) String() string { return proto.CompactTextString(m) }
func (*AndExpression) ProtoMessage()    {}
func (*AndExpression) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{7}
}
func (m *AndExpression) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AndExpression.Unmarshal(m, b)
}
func (m *AndExpression) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AndExpression.Marshal(b, m, deterministic)
}
func (m *AndExpression) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AndExpression.Merge(m, src)
}
func (m *AndExpression) XXX_Size() int {
	return xxx_messageInfo_AndExpression.Size(m)
}
func (m *AndExpression) XXX_DiscardUnknown() {
	xxx_messageInfo_AndExpression.DiscardUnknown(m)
}

var xxx_messageInfo_AndExpression proto.InternalMessageInfo

func (m *AndExpression) GetLeft() *FilterExpression {
	if m != nil {
		return m.Left
	}
	return nil
}

func (m *AndExpression) GetRight() *FilterExpression {
	if m != nil {
		return m.Right
	}
	return nil
}

type OrExpression struct {
	Left                 *FilterExpression `protobuf:"bytes,1,opt,name=left,proto3" json:"left,omitempty"`
	Right                *FilterExpression `protobuf:"bytes,2,opt,name=right,proto3" json:"right,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *OrExpression) Reset()         { *m = OrExpression{} }
func (m *OrExpression) String() string { return proto.CompactTextString(m) }
func (*OrExpression) ProtoMessage()    {}
func (*OrExpression) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{8}
}
func (m *OrExpression) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrExpression.Unmarshal(m, b)
}
func (m *OrExpression) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrExpression.Marshal(b, m, deterministic)
}
func (m *OrExpression) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrExpression.Merge(m, src)
}
func (m *OrExpression) XXX_Size() int {
	return xxx_messageInfo_OrExpression.Size(m)
}
func (m *OrExpression) XXX_DiscardUnknown() {
	xxx_messageInfo_OrExpression.DiscardUnknown(m)
}

var xxx_messageInfo_OrExpression proto.InternalMessageInfo

func (m *OrExpression) GetLeft() *FilterExpression {
	if m != nil {
		return m.Left
	}
	return nil
}

func (m *OrExpression) GetRight() *FilterExpression {
	if m != nil {
		return m.Right
	}
	return nil
}

type ComparisonExpression struct {
	Operator             node.OperatorStatement `protobuf:"varint,1,opt,name=operator,proto3,enum=cloudproud.lunodb.kit.node.v1.OperatorStatement" json:"operator,omitempty"`
	Left                 *FilterExpression      `protobuf:"bytes,2,opt,name=left,proto3" json:"left,omitempty"`
	Right                *FilterExpression      `protobuf:"bytes,3,opt,name=right,proto3" json:"right,omitempty"`
	SubOperator          node.OperatorStatement `protobuf:"varint,4,opt,name=sub_operator,json=subOperator,proto3,enum=cloudproud.lunodb.kit.node.v1.OperatorStatement" json:"sub_operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ComparisonExpression) Reset()         { *m = ComparisonExpression{} }
func (m *ComparisonExpression) String() string { return proto.CompactTextString(m) }
func (*ComparisonExpression) ProtoMessage()    {}
func (*ComparisonExpression) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{9}
}
func (m *ComparisonExpression) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComparisonExpression.Unmarshal(m, b)
}
func (m *ComparisonExpression) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComparisonExpression.Marshal(b, m, deterministic)
}
func (m *ComparisonExpression) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComparisonExpression.Merge(m, src)
}
func (m *ComparisonExpression) XXX_Size() int {
	return xxx_messageInfo_ComparisonExpression.Size(m)
}
func (m *ComparisonExpression) XXX_DiscardUnknown() {
	xxx_messageInfo_ComparisonExpression.DiscardUnknown(m)
}

var xxx_messageInfo_ComparisonExpression proto.InternalMessageInfo

func (m *ComparisonExpression) GetOperator() node.OperatorStatement {
	if m != nil {
		return m.Operator
	}
	return node.OperatorUnknown
}

func (m *ComparisonExpression) GetLeft() *FilterExpression {
	if m != nil {
		return m.Left
	}
	return nil
}

func (m *ComparisonExpression) GetRight() *FilterExpression {
	if m != nil {
		return m.Right
	}
	return nil
}

func (m *ComparisonExpression) GetSubOperator() node.OperatorStatement {
	if m != nil {
		return m.SubOperator
	}
	return node.OperatorUnknown
}

type BinaryExpression struct {
	Operator             node.BinaryStatement `protobuf:"varint,1,opt,name=operator,proto3,enum=cloudproud.lunodb.kit.node.v1.BinaryStatement" json:"operator,omitempty"`
	Left                 *Expression          `protobuf:"bytes,2,opt,name=left,proto3" json:"left,omitempty"`
	Right                *Expression          `protobuf:"bytes,3,opt,name=right,proto3" json:"right,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BinaryExpression) Reset()         { *m = BinaryExpression{} }
func (m *BinaryExpression) String() string { return proto.CompactTextString(m) }
func (*BinaryExpression) ProtoMessage()    {}
func (*BinaryExpression) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{10}
}
func (m *BinaryExpression) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinaryExpression.Unmarshal(m, b)
}
func (m *BinaryExpression) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinaryExpression.Marshal(b, m, deterministic)
}
func (m *BinaryExpression) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinaryExpression.Merge(m, src)
}
func (m *BinaryExpression) XXX_Size() int {
	return xxx_messageInfo_BinaryExpression.Size(m)
}
func (m *BinaryExpression) XXX_DiscardUnknown() {
	xxx_messageInfo_BinaryExpression.DiscardUnknown(m)
}

var xxx_messageInfo_BinaryExpression proto.InternalMessageInfo

func (m *BinaryExpression) GetOperator() node.BinaryStatement {
	if m != nil {
		return m.Operator
	}
	return node.BinaryStatementUnknown
}

func (m *BinaryExpression) GetLeft() *Expression {
	if m != nil {
		return m.Left
	}
	return nil
}

func (m *BinaryExpression) GetRight() *Expression {
	if m != nil {
		return m.Right
	}
	return nil
}

type CastExpression struct {
	Type                 *types.Type `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Expression           *Expression `protobuf:"bytes,2,opt,name=expression,proto3" json:"expression,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CastExpression) Reset()         { *m = CastExpression{} }
func (m *CastExpression) String() string { return proto.CompactTextString(m) }
func (*CastExpression) ProtoMessage()    {}
func (*CastExpression) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{11}
}
func (m *CastExpression) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CastExpression.Unmarshal(m, b)
}
func (m *CastExpression) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CastExpression.Marshal(b, m, deterministic)
}
func (m *CastExpression) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CastExpression.Merge(m, src)
}
func (m *CastExpression) XXX_Size() int {
	return xxx_messageInfo_CastExpression.Size(m)
}
func (m *CastExpression) XXX_DiscardUnknown() {
	xxx_messageInfo_CastExpression.DiscardUnknown(m)
}

var xxx_messageInfo_CastExpression proto.InternalMessageInfo

func (m *CastExpression) GetType() *types.Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *CastExpression) GetExpression() *Expression {
	if m != nil {
		return m.Expression
	}
	return nil
}

type Constant struct {
	Type                 *types.Type `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value                []byte      `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Constant) Reset()         { *m = Constant{} }
func (m *Constant) String() string { return proto.CompactTextString(m) }
func (*Constant) ProtoMessage()    {}
func (*Constant) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{12}
}
func (m *Constant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Constant.Unmarshal(m, b)
}
func (m *Constant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Constant.Marshal(b, m, deterministic)
}
func (m *Constant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Constant.Merge(m, src)
}
func (m *Constant) XXX_Size() int {
	return xxx_messageInfo_Constant.Size(m)
}
func (m *Constant) XXX_DiscardUnknown() {
	xxx_messageInfo_Constant.DiscardUnknown(m)
}

var xxx_messageInfo_Constant proto.InternalMessageInfo

func (m *Constant) GetType() *types.Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Constant) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type OrderBy struct {
	Expressions          []*OrderExpression `protobuf:"bytes,1,rep,name=expressions,proto3" json:"expressions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *OrderBy) Reset()         { *m = OrderBy{} }
func (m *OrderBy) String() string { return proto.CompactTextString(m) }
func (*OrderBy) ProtoMessage()    {}
func (*OrderBy) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{13}
}
func (m *OrderBy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderBy.Unmarshal(m, b)
}
func (m *OrderBy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderBy.Marshal(b, m, deterministic)
}
func (m *OrderBy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderBy.Merge(m, src)
}
func (m *OrderBy) XXX_Size() int {
	return xxx_messageInfo_OrderBy.Size(m)
}
func (m *OrderBy) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderBy.DiscardUnknown(m)
}

var xxx_messageInfo_OrderBy proto.InternalMessageInfo

func (m *OrderBy) GetExpressions() []*OrderExpression {
	if m != nil {
		return m.Expressions
	}
	return nil
}

type OrderExpression struct {
	Direction            uint32      `protobuf:"varint,1,opt,name=direction,proto3" json:"direction,omitempty"`
	Expression           *Expression `protobuf:"bytes,2,opt,name=expression,proto3" json:"expression,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *OrderExpression) Reset()         { *m = OrderExpression{} }
func (m *OrderExpression) String() string { return proto.CompactTextString(m) }
func (*OrderExpression) ProtoMessage()    {}
func (*OrderExpression) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{14}
}
func (m *OrderExpression) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderExpression.Unmarshal(m, b)
}
func (m *OrderExpression) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderExpression.Marshal(b, m, deterministic)
}
func (m *OrderExpression) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderExpression.Merge(m, src)
}
func (m *OrderExpression) XXX_Size() int {
	return xxx_messageInfo_OrderExpression.Size(m)
}
func (m *OrderExpression) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderExpression.DiscardUnknown(m)
}

var xxx_messageInfo_OrderExpression proto.InternalMessageInfo

func (m *OrderExpression) GetDirection() uint32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

func (m *OrderExpression) GetExpression() *Expression {
	if m != nil {
		return m.Expression
	}
	return nil
}

type Tuple struct {
	Expressions          []*Expression `protobuf:"bytes,1,rep,name=expressions,proto3" json:"expressions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Tuple) Reset()         { *m = Tuple{} }
func (m *Tuple) String() string { return proto.CompactTextString(m) }
func (*Tuple) ProtoMessage()    {}
func (*Tuple) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{15}
}
func (m *Tuple) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tuple.Unmarshal(m, b)
}
func (m *Tuple) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tuple.Marshal(b, m, deterministic)
}
func (m *Tuple) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tuple.Merge(m, src)
}
func (m *Tuple) XXX_Size() int {
	return xxx_messageInfo_Tuple.Size(m)
}
func (m *Tuple) XXX_DiscardUnknown() {
	xxx_messageInfo_Tuple.DiscardUnknown(m)
}

var xxx_messageInfo_Tuple proto.InternalMessageInfo

func (m *Tuple) GetExpressions() []*Expression {
	if m != nil {
		return m.Expressions
	}
	return nil
}

type VariableExpression struct {
	Offset               uint64   `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VariableExpression) Reset()         { *m = VariableExpression{} }
func (m *VariableExpression) String() string { return proto.CompactTextString(m) }
func (*VariableExpression) ProtoMessage()    {}
func (*VariableExpression) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{16}
}
func (m *VariableExpression) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VariableExpression.Unmarshal(m, b)
}
func (m *VariableExpression) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VariableExpression.Marshal(b, m, deterministic)
}
func (m *VariableExpression) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VariableExpression.Merge(m, src)
}
func (m *VariableExpression) XXX_Size() int {
	return xxx_messageInfo_VariableExpression.Size(m)
}
func (m *VariableExpression) XXX_DiscardUnknown() {
	xxx_messageInfo_VariableExpression.DiscardUnknown(m)
}

var xxx_messageInfo_VariableExpression proto.InternalMessageInfo

func (m *VariableExpression) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type Parameter struct {
	Index                uint32   `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Parameter) Reset()         { *m = Parameter{} }
func (m *Parameter) String() string { return proto.CompactTextString(m) }
func (*Parameter) ProtoMessage()    {}
func (*Parameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{17}
}
func (m *Parameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Parameter.Unmarshal(m, b)
}
func (m *Parameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Parameter.Marshal(b, m, deterministic)
}
func (m *Parameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Parameter.Merge(m, src)
}
func (m *Parameter) XXX_Size() int {
	return xxx_messageInfo_Parameter.Size(m)
}
func (m *Parameter) XXX_DiscardUnknown() {
	xxx_messageInfo_Parameter.DiscardUnknown(m)
}

var xxx_messageInfo_Parameter proto.InternalMessageInfo

func (m *Parameter) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func init() {
	proto.RegisterType((*Logical)(nil), "cloudproud.lunodb.kit.connector.plan.v1.Logical")
	proto.RegisterType((*From)(nil), "cloudproud.lunodb.kit.connector.plan.v1.From")
	proto.RegisterType((*Expression)(nil), "cloudproud.lunodb.kit.connector.plan.v1.Expression")
	proto.RegisterType((*Column)(nil), "cloudproud.lunodb.kit.connector.plan.v1.Column")
	proto.RegisterType((*FilterExpression)(nil), "cloudproud.lunodb.kit.connector.plan.v1.FilterExpression")
	proto.RegisterType((*Function)(nil), "cloudproud.lunodb.kit.connector.plan.v1.Function")
	proto.RegisterType((*Aggregation)(nil), "cloudproud.lunodb.kit.connector.plan.v1.Aggregation")
	proto.RegisterType((*AndExpression)(nil), "cloudproud.lunodb.kit.connector.plan.v1.AndExpression")
	proto.RegisterType((*OrExpression)(nil), "cloudproud.lunodb.kit.connector.plan.v1.OrExpression")
	proto.RegisterType((*ComparisonExpression)(nil), "cloudproud.lunodb.kit.connector.plan.v1.ComparisonExpression")
	proto.RegisterType((*BinaryExpression)(nil), "cloudproud.lunodb.kit.connector.plan.v1.BinaryExpression")
	proto.RegisterType((*CastExpression)(nil), "cloudproud.lunodb.kit.connector.plan.v1.CastExpression")
	proto.RegisterType((*Constant)(nil), "cloudproud.lunodb.kit.connector.plan.v1.Constant")
	proto.RegisterType((*OrderBy)(nil), "cloudproud.lunodb.kit.connector.plan.v1.OrderBy")
	proto.RegisterType((*OrderExpression)(nil), "cloudproud.lunodb.kit.connector.plan.v1.OrderExpression")
	proto.RegisterType((*Tuple)(nil), "cloudproud.lunodb.kit.connector.plan.v1.Tuple")
	proto.RegisterType((*VariableExpression)(nil), "cloudproud.lunodb.kit.connector.plan.v1.VariableExpression")
	proto.RegisterType((*Parameter)(nil), "cloudproud.lunodb.kit.connector.plan.v1.Parameter")
}

func init() { proto.RegisterFile("kit/plan/plan.proto", fileDescriptor_f3b98472bff7aeef) }

var fileDescriptor_f3b98472bff7aeef = []byte{
	// 1135 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x98, 0xcf, 0x6f, 0xe3, 0x44,
	0x14, 0xc7, 0x6b, 0xe7, 0x97, 0xf3, 0xd2, 0x76, 0x97, 0xa1, 0x8b, 0xa2, 0x8a, 0x43, 0xb1, 0x90,
	0xb6, 0x12, 0x8b, 0x43, 0xda, 0x05, 0x96, 0x20, 0x0e, 0x9b, 0x8a, 0xdd, 0x2e, 0x69, 0x69, 0x70,
	0xa1, 0x12, 0x55, 0x44, 0x35, 0xb6, 0x27, 0xae, 0xb5, 0xce, 0x8c, 0x65, 0x8f, 0xab, 0xcd, 0x11,
	0x09, 0x71, 0x47, 0xfc, 0x01, 0x48, 0x48, 0x5c, 0x38, 0xc0, 0xff, 0x01, 0x7f, 0x01, 0x57, 0x8e,
	0x1c, 0xf9, 0x0b, 0x90, 0x67, 0x6c, 0xc7, 0xe9, 0xb6, 0xc2, 0x6d, 0xba, 0x12, 0x48, 0x7b, 0x89,
	0x3c, 0xa3, 0xf9, 0x7e, 0xe6, 0xcd, 0x9b, 0x79, 0xf3, 0xde, 0x04, 0x5e, 0x7d, 0xea, 0xf1, 0x4e,
	0xe0, 0x63, 0x2a, 0x7e, 0x8c, 0x20, 0x64, 0x9c, 0xa1, 0xbb, 0xb6, 0xcf, 0x62, 0x27, 0x08, 0x59,
	0xec, 0x18, 0x7e, 0x4c, 0x99, 0x63, 0x19, 0x4f, 0x3d, 0x6e, 0xd8, 0x8c, 0x52, 0x62, 0x73, 0x16,
	0x1a, 0x62, 0xec, 0x59, 0x77, 0x7d, 0xcd, 0x65, 0x2e, 0x13, 0x9a, 0x4e, 0xf2, 0x25, 0xe5, 0xeb,
	0x82, 0x49, 0x99, 0x43, 0xc4, 0x4f, 0xda, 0x79, 0x27, 0xe9, 0xe4, 0xd3, 0x80, 0x44, 0xf2, 0x57,
	0x76, 0xeb, 0xdf, 0x57, 0xa0, 0xb1, 0xc7, 0x5c, 0xcf, 0xc6, 0x3e, 0xda, 0x87, 0x86, 0xcd, 0xfc,
	0x78, 0x42, 0xa3, 0xb6, 0xb2, 0x51, 0xd9, 0x6c, 0x6d, 0x6d, 0x1b, 0x25, 0x0d, 0x31, 0x3e, 0x7e,
	0x16, 0x84, 0x24, 0x8a, 0x3c, 0x46, 0xcd, 0x8c, 0x81, 0x1e, 0x42, 0x75, 0x1c, 0xb2, 0x49, 0x5b,
	0xdd, 0x50, 0x36, 0x5b, 0x5b, 0x6f, 0x97, 0x66, 0x3d, 0x0a, 0xd9, 0xc4, 0x14, 0x52, 0xf4, 0x19,
	0xd4, 0xc7, 0x9e, 0xcf, 0x49, 0xd8, 0xae, 0x08, 0xc8, 0x07, 0xe5, 0x21, 0x42, 0x56, 0x30, 0x2b,
	0x05, 0xa1, 0x23, 0x68, 0x61, 0xd7, 0x0d, 0x89, 0x8b, 0xb9, 0xc7, 0x68, 0xbb, 0x2a, 0xb8, 0xf7,
	0x4b, 0x73, 0x1f, 0xce, 0xb4, 0x66, 0x11, 0x84, 0x06, 0xa0, 0xb1, 0xd0, 0x21, 0xe1, 0x89, 0x35,
	0x6d, 0xd7, 0x04, 0xf4, 0x9d, 0xd2, 0xd0, 0x83, 0x44, 0xd8, 0x9f, 0x9a, 0x0d, 0x26, 0x3f, 0xf4,
	0xfb, 0x50, 0x4d, 0xbc, 0x80, 0xd6, 0xa0, 0xc6, 0xb1, 0xe5, 0x93, 0xb6, 0xb2, 0xa1, 0x6c, 0x36,
	0x4d, 0xd9, 0x40, 0xaf, 0x41, 0x3d, 0xb2, 0x4f, 0xc9, 0x04, 0x0b, 0xd7, 0x36, 0xcd, 0xb4, 0xa5,
	0xff, 0x5e, 0x03, 0x98, 0xad, 0x18, 0x3d, 0x81, 0xba, 0xdc, 0x0a, 0xa1, 0x6e, 0x6d, 0x75, 0x4a,
	0xdb, 0xb3, 0x23, 0x64, 0xbb, 0x4b, 0x66, 0x0a, 0x40, 0x07, 0xa0, 0x8d, 0x63, 0x6a, 0x0b, 0x8f,
	0xc9, 0xed, 0xec, 0x96, 0xdf, 0x89, 0x54, 0xb8, 0xbb, 0x64, 0xe6, 0x10, 0x74, 0x0a, 0xaf, 0x58,
	0x1e, 0xc5, 0xe1, 0xf4, 0x84, 0xe4, 0x06, 0x5f, 0x79, 0x8f, 0xfb, 0x82, 0x30, 0x5b, 0xf1, 0xee,
	0x92, 0x79, 0xdb, 0x3a, 0xd7, 0x97, 0x98, 0x6e, 0x33, 0x1a, 0x71, 0x4c, 0x79, 0xba, 0xd9, 0xdd,
	0x2b, 0xf8, 0x41, 0x0a, 0x13, 0xd3, 0x33, 0x08, 0x7a, 0x04, 0x35, 0x1e, 0x07, 0x3e, 0x49, 0x77,
	0xd9, 0x28, 0x4d, 0xfb, 0x3c, 0x51, 0xed, 0x2e, 0x99, 0x52, 0x8e, 0xbe, 0x04, 0xed, 0x0c, 0x87,
	0x9e, 0xd8, 0xde, 0xba, 0x40, 0x7d, 0x58, 0x1a, 0x75, 0x94, 0x0a, 0xe7, 0xd6, 0x9e, 0xe3, 0x90,
	0x09, 0xcd, 0x00, 0x87, 0x78, 0x42, 0x92, 0xc8, 0x69, 0x08, 0xf6, 0x56, 0x69, 0xf6, 0x30, 0x53,
	0xee, 0x2e, 0x99, 0x33, 0x0c, 0xb2, 0xe0, 0x96, 0x8d, 0x23, 0x5e, 0xdc, 0x2f, 0x4d, 0x90, 0xdf,
	0x2f, 0xef, 0x4e, 0x1c, 0xf1, 0x39, 0x8b, 0x57, 0xed, 0xb9, 0x9e, 0x7e, 0x0b, 0x9a, 0x11, 0xc7,
	0x9c, 0x4c, 0x08, 0xe5, 0xba, 0x03, 0x75, 0x79, 0x0e, 0x11, 0x82, 0x2a, 0xc5, 0x93, 0x2c, 0x08,
	0xc4, 0xf7, 0x2c, 0x32, 0xd4, 0x8b, 0x23, 0xa3, 0x52, 0x8c, 0x0c, 0xd4, 0x86, 0x86, 0x8d, 0x39,
	0xf6, 0x99, 0x2b, 0xce, 0x40, 0xd3, 0xcc, 0x9a, 0xfa, 0xb7, 0x1a, 0xdc, 0x3e, 0x7f, 0x57, 0xbc,
	0x8c, 0x9c, 0x97, 0x91, 0xf3, 0xff, 0x8a, 0x1c, 0x74, 0x02, 0xab, 0x98, 0x3a, 0xc5, 0x29, 0x9a,
	0x62, 0x8a, 0xf7, 0xca, 0x27, 0x36, 0xea, 0xcc, 0xcd, 0xb0, 0x82, 0x8b, 0x1d, 0x68, 0x04, 0x2b,
	0x2c, 0x2c, 0xf2, 0x41, 0xf0, 0xdf, 0xbd, 0x42, 0x8e, 0x9b, 0xc3, 0x2f, 0xb3, 0x62, 0xc0, 0x71,
	0xb8, 0x63, 0xb3, 0x49, 0x80, 0x43, 0x2f, 0x62, 0xb4, 0x38, 0x4b, 0x4b, 0xcc, 0xf2, 0xd1, 0x15,
	0xce, 0x5d, 0x46, 0x99, 0x9b, 0x6d, 0xcd, 0xbe, 0xa0, 0x3f, 0xb9, 0x6e, 0x6c, 0x46, 0x1d, 0x2f,
	0x89, 0x2b, 0xfd, 0x3b, 0x05, 0xb4, 0x2c, 0xe0, 0xd0, 0x17, 0xd0, 0x9a, 0x19, 0xb1, 0x50, 0x35,
	0x54, 0xe4, 0xe4, 0x17, 0x99, 0x5a, 0xb8, 0xc8, 0xd6, 0x41, 0x73, 0xbc, 0x88, 0x7b, 0xd4, 0xe6,
	0x22, 0x8c, 0x35, 0x33, 0x6f, 0xeb, 0x5f, 0xab, 0xd0, 0x2a, 0x14, 0x1c, 0xe8, 0x53, 0xd0, 0xdc,
	0x90, 0xc5, 0x41, 0x52, 0x63, 0x2c, 0x52, 0xa1, 0x09, 0x48, 0x7f, 0x8a, 0x06, 0x50, 0x3f, 0xc5,
	0x67, 0x1e, 0x75, 0xd3, 0xab, 0xe9, 0x5a, 0xb4, 0x14, 0x71, 0xde, 0x67, 0x95, 0x9b, 0xf1, 0x99,
	0xfe, 0xab, 0x02, 0x2b, 0x73, 0x67, 0x13, 0xed, 0x43, 0xd5, 0x27, 0x63, 0x9e, 0xde, 0xcd, 0x0b,
	0x94, 0x84, 0x02, 0x83, 0x0e, 0xa0, 0x16, 0x7a, 0xee, 0x29, 0x4f, 0x7d, 0xb0, 0x00, 0x4f, 0x72,
	0xf4, 0x5f, 0x14, 0x58, 0x2e, 0x9e, 0xf6, 0xff, 0xbc, 0xc1, 0x7f, 0xa8, 0xb0, 0x76, 0x51, 0xe0,
	0xa0, 0x3d, 0xd0, 0x58, 0x40, 0x42, 0xcc, 0x59, 0x28, 0x8c, 0x5f, 0xbd, 0xb4, 0xa6, 0x15, 0x0f,
	0x8d, 0x24, 0xca, 0xd3, 0xe1, 0x87, 0x59, 0x1a, 0x37, 0x73, 0x42, 0xee, 0x06, 0xf5, 0x86, 0xdd,
	0x50, 0xb9, 0x19, 0x37, 0xa0, 0x43, 0x58, 0x8e, 0x62, 0xeb, 0x24, 0x5f, 0x71, 0xf5, 0x9a, 0x2b,
	0x6e, 0x45, 0xb1, 0x95, 0xf5, 0xea, 0x7f, 0x2b, 0x70, 0xfb, 0x7c, 0xb6, 0x45, 0x9f, 0x3c, 0xe7,
	0x57, 0xe3, 0x5f, 0x66, 0x91, 0x88, 0x8b, 0xbc, 0xfa, 0x78, 0xce, 0xab, 0xd7, 0x8a, 0x37, 0xe9,
	0xcf, 0x27, 0xf3, 0xfe, 0xbc, 0x16, 0x29, 0x3d, 0x50, 0x3f, 0x28, 0xb0, 0x3a, 0x9f, 0xb2, 0xd0,
	0x03, 0xa8, 0x26, 0xcf, 0xce, 0x34, 0x06, 0xde, 0xbc, 0x04, 0x2e, 0x5f, 0xa6, 0x49, 0xc6, 0x9f,
	0x06, 0xc4, 0x14, 0x0a, 0x74, 0x08, 0x50, 0x48, 0x08, 0x0b, 0x2c, 0xb3, 0x80, 0xd1, 0x8f, 0x41,
	0xcb, 0x4a, 0x94, 0x05, 0x4c, 0x5b, 0x83, 0xda, 0x19, 0xf6, 0x63, 0x79, 0xa1, 0x2f, 0x9b, 0xb2,
	0xa1, 0x13, 0x68, 0xa4, 0x0f, 0x3a, 0x74, 0x7c, 0x51, 0x1e, 0x79, 0x70, 0xb5, 0x77, 0xe1, 0x65,
	0x17, 0xe3, 0x37, 0x0a, 0xdc, 0x3a, 0x37, 0x00, 0xbd, 0x0e, 0x4d, 0xc7, 0x0b, 0x89, 0x2c, 0x37,
	0x93, 0xf5, 0xac, 0x98, 0xb3, 0x8e, 0x17, 0xe3, 0xc9, 0xaf, 0xa0, 0x26, 0xca, 0xb3, 0x17, 0x94,
	0x33, 0xf5, 0x7b, 0x80, 0x9e, 0xaf, 0xd9, 0x92, 0x42, 0x9f, 0x8d, 0xc7, 0x11, 0x91, 0x97, 0x6a,
	0xd5, 0x4c, 0x5b, 0xfa, 0x1b, 0xd0, 0xcc, 0xab, 0xb0, 0x64, 0x7b, 0x3c, 0xea, 0x90, 0x67, 0xa9,
	0x27, 0x64, 0xa3, 0xff, 0x93, 0x0a, 0x6f, 0xd9, 0x6c, 0x52, 0xd6, 0xb0, 0x7e, 0x73, 0xe8, 0x63,
	0x3a, 0x0c, 0x19, 0x67, 0x43, 0xe5, 0x78, 0xd3, 0xf5, 0xf8, 0x69, 0x6c, 0x19, 0x36, 0x9b, 0x74,
	0x66, 0x80, 0x4e, 0x0a, 0x08, 0xac, 0x4e, 0xf6, 0x77, 0xce, 0x8f, 0x6a, 0x6d, 0x67, 0x6f, 0xb0,
	0x33, 0xfc, 0x59, 0xbd, 0xbb, 0x33, 0x9b, 0x68, 0x4f, 0x8e, 0x1b, 0x78, 0x3c, 0xa9, 0x90, 0xd3,
	0x89, 0x12, 0xbe, 0x71, 0xd4, 0xfd, 0xad, 0x38, 0x72, 0x24, 0x47, 0x8e, 0x06, 0x1e, 0x1f, 0xe5,
	0x23, 0x47, 0xc9, 0xc8, 0xd1, 0x51, 0xf7, 0x4f, 0x75, 0xbb, 0xe4, 0xc8, 0xd1, 0xe3, 0x61, 0x7f,
	0x9f, 0x70, 0xec, 0x60, 0x8e, 0xff, 0x52, 0xef, 0xcd, 0x54, 0xbd, 0x9e, 0x94, 0xf5, 0x7a, 0x03,
	0x8f, 0xf7, 0x7a, 0xb9, 0xb0, 0xd7, 0x4b, 0x94, 0xbd, 0xde, 0x51, 0xd7, 0xaa, 0x8b, 0x3f, 0x88,
	0xb6, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0x99, 0x94, 0xcf, 0x56, 0xa2, 0x12, 0x00, 0x00,
}
