// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: kit/plan/plan.proto

package plan

import (
	fmt "fmt"
	node "github.com/cloudproud/lunodb.pb/kit/node"
	types "github.com/cloudproud/lunodb/services/kit/pkg/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Node struct {
	// Types that are valid to be assigned to Plan:
	//
	//	*Node_Column
	//	*Node_Filter
	//	*Node_Function
	//	*Node_Aggregation
	//	*Node_AndExpression
	//	*Node_OrExpression
	//	*Node_ComparisonExpression
	//	*Node_BinaryExpression
	//	*Node_CastExpression
	//	*Node_Constant
	//	*Node_Tupkle
	//	*Node_Variable
	//	*Node_OrderBy
	//	*Node_Parameter
	Plan                 isNode_Plan `protobuf_oneof:"plan"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{0}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

type isNode_Plan interface {
	isNode_Plan()
}

type Node_Column struct {
	Column *ColumnNode `protobuf:"bytes,2,opt,name=column,proto3,oneof" json:"column,omitempty"`
}
type Node_Filter struct {
	Filter *FilterNode `protobuf:"bytes,3,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
}
type Node_Function struct {
	Function *FunctionNode `protobuf:"bytes,4,opt,name=function,proto3,oneof" json:"function,omitempty"`
}
type Node_Aggregation struct {
	Aggregation *AggregationNode `protobuf:"bytes,5,opt,name=aggregation,proto3,oneof" json:"aggregation,omitempty"`
}
type Node_AndExpression struct {
	AndExpression *AndExpressionNode `protobuf:"bytes,7,opt,name=and_expression,json=andExpression,proto3,oneof" json:"and_expression,omitempty"`
}
type Node_OrExpression struct {
	OrExpression *OrExpressionNode `protobuf:"bytes,8,opt,name=or_expression,json=orExpression,proto3,oneof" json:"or_expression,omitempty"`
}
type Node_ComparisonExpression struct {
	ComparisonExpression *ComparisonExpressionNode `protobuf:"bytes,9,opt,name=comparison_expression,json=comparisonExpression,proto3,oneof" json:"comparison_expression,omitempty"`
}
type Node_BinaryExpression struct {
	BinaryExpression *BinaryExpressionNode `protobuf:"bytes,10,opt,name=binary_expression,json=binaryExpression,proto3,oneof" json:"binary_expression,omitempty"`
}
type Node_CastExpression struct {
	CastExpression *CastExpression `protobuf:"bytes,11,opt,name=cast_expression,json=castExpression,proto3,oneof" json:"cast_expression,omitempty"`
}
type Node_Constant struct {
	Constant *ConstantNode `protobuf:"bytes,13,opt,name=constant,proto3,oneof" json:"constant,omitempty"`
}
type Node_Tupkle struct {
	Tupkle *TupleNode `protobuf:"bytes,18,opt,name=tupkle,proto3,oneof" json:"tupkle,omitempty"`
}
type Node_Variable struct {
	Variable *VariableExpression `protobuf:"bytes,19,opt,name=variable,proto3,oneof" json:"variable,omitempty"`
}
type Node_OrderBy struct {
	OrderBy *OrderByNode `protobuf:"bytes,20,opt,name=order_by,json=orderBy,proto3,oneof" json:"order_by,omitempty"`
}
type Node_Parameter struct {
	Parameter *ParameterNode `protobuf:"bytes,25,opt,name=parameter,proto3,oneof" json:"parameter,omitempty"`
}

func (*Node_Column) isNode_Plan()               {}
func (*Node_Filter) isNode_Plan()               {}
func (*Node_Function) isNode_Plan()             {}
func (*Node_Aggregation) isNode_Plan()          {}
func (*Node_AndExpression) isNode_Plan()        {}
func (*Node_OrExpression) isNode_Plan()         {}
func (*Node_ComparisonExpression) isNode_Plan() {}
func (*Node_BinaryExpression) isNode_Plan()     {}
func (*Node_CastExpression) isNode_Plan()       {}
func (*Node_Constant) isNode_Plan()             {}
func (*Node_Tupkle) isNode_Plan()               {}
func (*Node_Variable) isNode_Plan()             {}
func (*Node_OrderBy) isNode_Plan()              {}
func (*Node_Parameter) isNode_Plan()            {}

func (m *Node) GetPlan() isNode_Plan {
	if m != nil {
		return m.Plan
	}
	return nil
}

func (m *Node) GetColumn() *ColumnNode {
	if x, ok := m.GetPlan().(*Node_Column); ok {
		return x.Column
	}
	return nil
}

func (m *Node) GetFilter() *FilterNode {
	if x, ok := m.GetPlan().(*Node_Filter); ok {
		return x.Filter
	}
	return nil
}

func (m *Node) GetFunction() *FunctionNode {
	if x, ok := m.GetPlan().(*Node_Function); ok {
		return x.Function
	}
	return nil
}

func (m *Node) GetAggregation() *AggregationNode {
	if x, ok := m.GetPlan().(*Node_Aggregation); ok {
		return x.Aggregation
	}
	return nil
}

func (m *Node) GetAndExpression() *AndExpressionNode {
	if x, ok := m.GetPlan().(*Node_AndExpression); ok {
		return x.AndExpression
	}
	return nil
}

func (m *Node) GetOrExpression() *OrExpressionNode {
	if x, ok := m.GetPlan().(*Node_OrExpression); ok {
		return x.OrExpression
	}
	return nil
}

func (m *Node) GetComparisonExpression() *ComparisonExpressionNode {
	if x, ok := m.GetPlan().(*Node_ComparisonExpression); ok {
		return x.ComparisonExpression
	}
	return nil
}

func (m *Node) GetBinaryExpression() *BinaryExpressionNode {
	if x, ok := m.GetPlan().(*Node_BinaryExpression); ok {
		return x.BinaryExpression
	}
	return nil
}

func (m *Node) GetCastExpression() *CastExpression {
	if x, ok := m.GetPlan().(*Node_CastExpression); ok {
		return x.CastExpression
	}
	return nil
}

func (m *Node) GetConstant() *ConstantNode {
	if x, ok := m.GetPlan().(*Node_Constant); ok {
		return x.Constant
	}
	return nil
}

func (m *Node) GetTupkle() *TupleNode {
	if x, ok := m.GetPlan().(*Node_Tupkle); ok {
		return x.Tupkle
	}
	return nil
}

func (m *Node) GetVariable() *VariableExpression {
	if x, ok := m.GetPlan().(*Node_Variable); ok {
		return x.Variable
	}
	return nil
}

func (m *Node) GetOrderBy() *OrderByNode {
	if x, ok := m.GetPlan().(*Node_OrderBy); ok {
		return x.OrderBy
	}
	return nil
}

func (m *Node) GetParameter() *ParameterNode {
	if x, ok := m.GetPlan().(*Node_Parameter); ok {
		return x.Parameter
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Node) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Node_Column)(nil),
		(*Node_Filter)(nil),
		(*Node_Function)(nil),
		(*Node_Aggregation)(nil),
		(*Node_AndExpression)(nil),
		(*Node_OrExpression)(nil),
		(*Node_ComparisonExpression)(nil),
		(*Node_BinaryExpression)(nil),
		(*Node_CastExpression)(nil),
		(*Node_Constant)(nil),
		(*Node_Tupkle)(nil),
		(*Node_Variable)(nil),
		(*Node_OrderBy)(nil),
		(*Node_Parameter)(nil),
	}
}

type ColumnNode struct {
	ID                   uint64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Table                string           `protobuf:"bytes,3,opt,name=table,proto3" json:"table,omitempty"`
	Schema               string           `protobuf:"bytes,4,opt,name=schema,proto3" json:"schema,omitempty"`
	Catalog              string           `protobuf:"bytes,5,opt,name=catalog,proto3" json:"catalog,omitempty"`
	Node                 *Node            `protobuf:"bytes,6,opt,name=node,proto3" json:"node,omitempty"`
	Operators            []*node.Operator `protobuf:"bytes,7,rep,name=operators,proto3" json:"operators,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ColumnNode) Reset()         { *m = ColumnNode{} }
func (m *ColumnNode) String() string { return proto.CompactTextString(m) }
func (*ColumnNode) ProtoMessage()    {}
func (*ColumnNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{1}
}
func (m *ColumnNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ColumnNode.Unmarshal(m, b)
}
func (m *ColumnNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ColumnNode.Marshal(b, m, deterministic)
}
func (m *ColumnNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ColumnNode.Merge(m, src)
}
func (m *ColumnNode) XXX_Size() int {
	return xxx_messageInfo_ColumnNode.Size(m)
}
func (m *ColumnNode) XXX_DiscardUnknown() {
	xxx_messageInfo_ColumnNode.DiscardUnknown(m)
}

var xxx_messageInfo_ColumnNode proto.InternalMessageInfo

func (m *ColumnNode) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *ColumnNode) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ColumnNode) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *ColumnNode) GetSchema() string {
	if m != nil {
		return m.Schema
	}
	return ""
}

func (m *ColumnNode) GetCatalog() string {
	if m != nil {
		return m.Catalog
	}
	return ""
}

func (m *ColumnNode) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *ColumnNode) GetOperators() []*node.Operator {
	if m != nil {
		return m.Operators
	}
	return nil
}

type FilterNode struct {
	Conditions           *Node    `protobuf:"bytes,1,opt,name=conditions,proto3" json:"conditions,omitempty"`
	From                 *Node    `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilterNode) Reset()         { *m = FilterNode{} }
func (m *FilterNode) String() string { return proto.CompactTextString(m) }
func (*FilterNode) ProtoMessage()    {}
func (*FilterNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{2}
}
func (m *FilterNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterNode.Unmarshal(m, b)
}
func (m *FilterNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterNode.Marshal(b, m, deterministic)
}
func (m *FilterNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterNode.Merge(m, src)
}
func (m *FilterNode) XXX_Size() int {
	return xxx_messageInfo_FilterNode.Size(m)
}
func (m *FilterNode) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterNode.DiscardUnknown(m)
}

var xxx_messageInfo_FilterNode proto.InternalMessageInfo

func (m *FilterNode) GetConditions() *Node {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *FilterNode) GetFrom() *Node {
	if m != nil {
		return m.From
	}
	return nil
}

type FunctionNode struct {
	Expressions          []*Node  `protobuf:"bytes,1,rep,name=expressions,proto3" json:"expressions,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Distinct             bool     `protobuf:"varint,3,opt,name=distinct,proto3" json:"distinct,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FunctionNode) Reset()         { *m = FunctionNode{} }
func (m *FunctionNode) String() string { return proto.CompactTextString(m) }
func (*FunctionNode) ProtoMessage()    {}
func (*FunctionNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{3}
}
func (m *FunctionNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FunctionNode.Unmarshal(m, b)
}
func (m *FunctionNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FunctionNode.Marshal(b, m, deterministic)
}
func (m *FunctionNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FunctionNode.Merge(m, src)
}
func (m *FunctionNode) XXX_Size() int {
	return xxx_messageInfo_FunctionNode.Size(m)
}
func (m *FunctionNode) XXX_DiscardUnknown() {
	xxx_messageInfo_FunctionNode.DiscardUnknown(m)
}

var xxx_messageInfo_FunctionNode proto.InternalMessageInfo

func (m *FunctionNode) GetExpressions() []*Node {
	if m != nil {
		return m.Expressions
	}
	return nil
}

func (m *FunctionNode) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FunctionNode) GetDistinct() bool {
	if m != nil {
		return m.Distinct
	}
	return false
}

type AggregationNode struct {
	From                 *Node    `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	GroupBy              []*Node  `protobuf:"bytes,2,rep,name=group_by,json=groupBy,proto3" json:"group_by,omitempty"`
	Having               *Node    `protobuf:"bytes,3,opt,name=having,proto3" json:"having,omitempty"`
	Expressions          []*Node  `protobuf:"bytes,4,rep,name=expressions,proto3" json:"expressions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AggregationNode) Reset()         { *m = AggregationNode{} }
func (m *AggregationNode) String() string { return proto.CompactTextString(m) }
func (*AggregationNode) ProtoMessage()    {}
func (*AggregationNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{4}
}
func (m *AggregationNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregationNode.Unmarshal(m, b)
}
func (m *AggregationNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregationNode.Marshal(b, m, deterministic)
}
func (m *AggregationNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregationNode.Merge(m, src)
}
func (m *AggregationNode) XXX_Size() int {
	return xxx_messageInfo_AggregationNode.Size(m)
}
func (m *AggregationNode) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregationNode.DiscardUnknown(m)
}

var xxx_messageInfo_AggregationNode proto.InternalMessageInfo

func (m *AggregationNode) GetFrom() *Node {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *AggregationNode) GetGroupBy() []*Node {
	if m != nil {
		return m.GroupBy
	}
	return nil
}

func (m *AggregationNode) GetHaving() *Node {
	if m != nil {
		return m.Having
	}
	return nil
}

func (m *AggregationNode) GetExpressions() []*Node {
	if m != nil {
		return m.Expressions
	}
	return nil
}

type AndExpressionNode struct {
	Left                 *Node    `protobuf:"bytes,1,opt,name=left,proto3" json:"left,omitempty"`
	Right                *Node    `protobuf:"bytes,2,opt,name=right,proto3" json:"right,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AndExpressionNode) Reset()         { *m = AndExpressionNode{} }
func (m *AndExpressionNode) String() string { return proto.CompactTextString(m) }
func (*AndExpressionNode) ProtoMessage()    {}
func (*AndExpressionNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{5}
}
func (m *AndExpressionNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AndExpressionNode.Unmarshal(m, b)
}
func (m *AndExpressionNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AndExpressionNode.Marshal(b, m, deterministic)
}
func (m *AndExpressionNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AndExpressionNode.Merge(m, src)
}
func (m *AndExpressionNode) XXX_Size() int {
	return xxx_messageInfo_AndExpressionNode.Size(m)
}
func (m *AndExpressionNode) XXX_DiscardUnknown() {
	xxx_messageInfo_AndExpressionNode.DiscardUnknown(m)
}

var xxx_messageInfo_AndExpressionNode proto.InternalMessageInfo

func (m *AndExpressionNode) GetLeft() *Node {
	if m != nil {
		return m.Left
	}
	return nil
}

func (m *AndExpressionNode) GetRight() *Node {
	if m != nil {
		return m.Right
	}
	return nil
}

type OrExpressionNode struct {
	Left                 *Node    `protobuf:"bytes,1,opt,name=left,proto3" json:"left,omitempty"`
	Right                *Node    `protobuf:"bytes,2,opt,name=right,proto3" json:"right,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrExpressionNode) Reset()         { *m = OrExpressionNode{} }
func (m *OrExpressionNode) String() string { return proto.CompactTextString(m) }
func (*OrExpressionNode) ProtoMessage()    {}
func (*OrExpressionNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{6}
}
func (m *OrExpressionNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrExpressionNode.Unmarshal(m, b)
}
func (m *OrExpressionNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrExpressionNode.Marshal(b, m, deterministic)
}
func (m *OrExpressionNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrExpressionNode.Merge(m, src)
}
func (m *OrExpressionNode) XXX_Size() int {
	return xxx_messageInfo_OrExpressionNode.Size(m)
}
func (m *OrExpressionNode) XXX_DiscardUnknown() {
	xxx_messageInfo_OrExpressionNode.DiscardUnknown(m)
}

var xxx_messageInfo_OrExpressionNode proto.InternalMessageInfo

func (m *OrExpressionNode) GetLeft() *Node {
	if m != nil {
		return m.Left
	}
	return nil
}

func (m *OrExpressionNode) GetRight() *Node {
	if m != nil {
		return m.Right
	}
	return nil
}

type BinaryExpressionNode struct {
	Operator             node.BinaryStatement `protobuf:"varint,1,opt,name=operator,proto3,enum=cloudproud.lunodb.kit.node.v1.BinaryStatement" json:"operator,omitempty"`
	Left                 *Node                `protobuf:"bytes,2,opt,name=left,proto3" json:"left,omitempty"`
	Right                *Node                `protobuf:"bytes,3,opt,name=right,proto3" json:"right,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BinaryExpressionNode) Reset()         { *m = BinaryExpressionNode{} }
func (m *BinaryExpressionNode) String() string { return proto.CompactTextString(m) }
func (*BinaryExpressionNode) ProtoMessage()    {}
func (*BinaryExpressionNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{7}
}
func (m *BinaryExpressionNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinaryExpressionNode.Unmarshal(m, b)
}
func (m *BinaryExpressionNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinaryExpressionNode.Marshal(b, m, deterministic)
}
func (m *BinaryExpressionNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinaryExpressionNode.Merge(m, src)
}
func (m *BinaryExpressionNode) XXX_Size() int {
	return xxx_messageInfo_BinaryExpressionNode.Size(m)
}
func (m *BinaryExpressionNode) XXX_DiscardUnknown() {
	xxx_messageInfo_BinaryExpressionNode.DiscardUnknown(m)
}

var xxx_messageInfo_BinaryExpressionNode proto.InternalMessageInfo

func (m *BinaryExpressionNode) GetOperator() node.BinaryStatement {
	if m != nil {
		return m.Operator
	}
	return node.BinaryStatementUnknown
}

func (m *BinaryExpressionNode) GetLeft() *Node {
	if m != nil {
		return m.Left
	}
	return nil
}

func (m *BinaryExpressionNode) GetRight() *Node {
	if m != nil {
		return m.Right
	}
	return nil
}

type CastExpression struct {
	Type                 *types.Type `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Expression           *Node       `protobuf:"bytes,2,opt,name=expression,proto3" json:"expression,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CastExpression) Reset()         { *m = CastExpression{} }
func (m *CastExpression) String() string { return proto.CompactTextString(m) }
func (*CastExpression) ProtoMessage()    {}
func (*CastExpression) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{8}
}
func (m *CastExpression) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CastExpression.Unmarshal(m, b)
}
func (m *CastExpression) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CastExpression.Marshal(b, m, deterministic)
}
func (m *CastExpression) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CastExpression.Merge(m, src)
}
func (m *CastExpression) XXX_Size() int {
	return xxx_messageInfo_CastExpression.Size(m)
}
func (m *CastExpression) XXX_DiscardUnknown() {
	xxx_messageInfo_CastExpression.DiscardUnknown(m)
}

var xxx_messageInfo_CastExpression proto.InternalMessageInfo

func (m *CastExpression) GetType() *types.Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *CastExpression) GetExpression() *Node {
	if m != nil {
		return m.Expression
	}
	return nil
}

type ComparisonExpressionNode struct {
	Operator             node.OperatorStatement `protobuf:"varint,1,opt,name=operator,proto3,enum=cloudproud.lunodb.kit.node.v1.OperatorStatement" json:"operator,omitempty"`
	Left                 *Node                  `protobuf:"bytes,2,opt,name=left,proto3" json:"left,omitempty"`
	Right                *Node                  `protobuf:"bytes,3,opt,name=right,proto3" json:"right,omitempty"`
	SubOperator          node.OperatorStatement `protobuf:"varint,4,opt,name=sub_operator,json=subOperator,proto3,enum=cloudproud.lunodb.kit.node.v1.OperatorStatement" json:"sub_operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ComparisonExpressionNode) Reset()         { *m = ComparisonExpressionNode{} }
func (m *ComparisonExpressionNode) String() string { return proto.CompactTextString(m) }
func (*ComparisonExpressionNode) ProtoMessage()    {}
func (*ComparisonExpressionNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{9}
}
func (m *ComparisonExpressionNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComparisonExpressionNode.Unmarshal(m, b)
}
func (m *ComparisonExpressionNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComparisonExpressionNode.Marshal(b, m, deterministic)
}
func (m *ComparisonExpressionNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComparisonExpressionNode.Merge(m, src)
}
func (m *ComparisonExpressionNode) XXX_Size() int {
	return xxx_messageInfo_ComparisonExpressionNode.Size(m)
}
func (m *ComparisonExpressionNode) XXX_DiscardUnknown() {
	xxx_messageInfo_ComparisonExpressionNode.DiscardUnknown(m)
}

var xxx_messageInfo_ComparisonExpressionNode proto.InternalMessageInfo

func (m *ComparisonExpressionNode) GetOperator() node.OperatorStatement {
	if m != nil {
		return m.Operator
	}
	return node.OperatorUnknown
}

func (m *ComparisonExpressionNode) GetLeft() *Node {
	if m != nil {
		return m.Left
	}
	return nil
}

func (m *ComparisonExpressionNode) GetRight() *Node {
	if m != nil {
		return m.Right
	}
	return nil
}

func (m *ComparisonExpressionNode) GetSubOperator() node.OperatorStatement {
	if m != nil {
		return m.SubOperator
	}
	return node.OperatorUnknown
}

type ConstantNode struct {
	Type                 *types.Type `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value                []byte      `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ConstantNode) Reset()         { *m = ConstantNode{} }
func (m *ConstantNode) String() string { return proto.CompactTextString(m) }
func (*ConstantNode) ProtoMessage()    {}
func (*ConstantNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{10}
}
func (m *ConstantNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConstantNode.Unmarshal(m, b)
}
func (m *ConstantNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConstantNode.Marshal(b, m, deterministic)
}
func (m *ConstantNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConstantNode.Merge(m, src)
}
func (m *ConstantNode) XXX_Size() int {
	return xxx_messageInfo_ConstantNode.Size(m)
}
func (m *ConstantNode) XXX_DiscardUnknown() {
	xxx_messageInfo_ConstantNode.DiscardUnknown(m)
}

var xxx_messageInfo_ConstantNode proto.InternalMessageInfo

func (m *ConstantNode) GetType() *types.Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ConstantNode) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type OrderByNode struct {
	From                 *Node                  `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Expressions          []*OrderExpressionNode `protobuf:"bytes,2,rep,name=expressions,proto3" json:"expressions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *OrderByNode) Reset()         { *m = OrderByNode{} }
func (m *OrderByNode) String() string { return proto.CompactTextString(m) }
func (*OrderByNode) ProtoMessage()    {}
func (*OrderByNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{11}
}
func (m *OrderByNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderByNode.Unmarshal(m, b)
}
func (m *OrderByNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderByNode.Marshal(b, m, deterministic)
}
func (m *OrderByNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderByNode.Merge(m, src)
}
func (m *OrderByNode) XXX_Size() int {
	return xxx_messageInfo_OrderByNode.Size(m)
}
func (m *OrderByNode) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderByNode.DiscardUnknown(m)
}

var xxx_messageInfo_OrderByNode proto.InternalMessageInfo

func (m *OrderByNode) GetFrom() *Node {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *OrderByNode) GetExpressions() []*OrderExpressionNode {
	if m != nil {
		return m.Expressions
	}
	return nil
}

type OrderExpressionNode struct {
	Direction            uint32   `protobuf:"varint,1,opt,name=direction,proto3" json:"direction,omitempty"`
	Expression           *Node    `protobuf:"bytes,2,opt,name=expression,proto3" json:"expression,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderExpressionNode) Reset()         { *m = OrderExpressionNode{} }
func (m *OrderExpressionNode) String() string { return proto.CompactTextString(m) }
func (*OrderExpressionNode) ProtoMessage()    {}
func (*OrderExpressionNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{12}
}
func (m *OrderExpressionNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderExpressionNode.Unmarshal(m, b)
}
func (m *OrderExpressionNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderExpressionNode.Marshal(b, m, deterministic)
}
func (m *OrderExpressionNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderExpressionNode.Merge(m, src)
}
func (m *OrderExpressionNode) XXX_Size() int {
	return xxx_messageInfo_OrderExpressionNode.Size(m)
}
func (m *OrderExpressionNode) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderExpressionNode.DiscardUnknown(m)
}

var xxx_messageInfo_OrderExpressionNode proto.InternalMessageInfo

func (m *OrderExpressionNode) GetDirection() uint32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

func (m *OrderExpressionNode) GetExpression() *Node {
	if m != nil {
		return m.Expression
	}
	return nil
}

type TupleNode struct {
	Expressions          []*Node  `protobuf:"bytes,1,rep,name=expressions,proto3" json:"expressions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TupleNode) Reset()         { *m = TupleNode{} }
func (m *TupleNode) String() string { return proto.CompactTextString(m) }
func (*TupleNode) ProtoMessage()    {}
func (*TupleNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{13}
}
func (m *TupleNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TupleNode.Unmarshal(m, b)
}
func (m *TupleNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TupleNode.Marshal(b, m, deterministic)
}
func (m *TupleNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TupleNode.Merge(m, src)
}
func (m *TupleNode) XXX_Size() int {
	return xxx_messageInfo_TupleNode.Size(m)
}
func (m *TupleNode) XXX_DiscardUnknown() {
	xxx_messageInfo_TupleNode.DiscardUnknown(m)
}

var xxx_messageInfo_TupleNode proto.InternalMessageInfo

func (m *TupleNode) GetExpressions() []*Node {
	if m != nil {
		return m.Expressions
	}
	return nil
}

type VariableExpression struct {
	Offset               uint64   `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VariableExpression) Reset()         { *m = VariableExpression{} }
func (m *VariableExpression) String() string { return proto.CompactTextString(m) }
func (*VariableExpression) ProtoMessage()    {}
func (*VariableExpression) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{14}
}
func (m *VariableExpression) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VariableExpression.Unmarshal(m, b)
}
func (m *VariableExpression) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VariableExpression.Marshal(b, m, deterministic)
}
func (m *VariableExpression) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VariableExpression.Merge(m, src)
}
func (m *VariableExpression) XXX_Size() int {
	return xxx_messageInfo_VariableExpression.Size(m)
}
func (m *VariableExpression) XXX_DiscardUnknown() {
	xxx_messageInfo_VariableExpression.DiscardUnknown(m)
}

var xxx_messageInfo_VariableExpression proto.InternalMessageInfo

func (m *VariableExpression) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type ParameterNode struct {
	Index                uint32   `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParameterNode) Reset()         { *m = ParameterNode{} }
func (m *ParameterNode) String() string { return proto.CompactTextString(m) }
func (*ParameterNode) ProtoMessage()    {}
func (*ParameterNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3b98472bff7aeef, []int{15}
}
func (m *ParameterNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParameterNode.Unmarshal(m, b)
}
func (m *ParameterNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParameterNode.Marshal(b, m, deterministic)
}
func (m *ParameterNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParameterNode.Merge(m, src)
}
func (m *ParameterNode) XXX_Size() int {
	return xxx_messageInfo_ParameterNode.Size(m)
}
func (m *ParameterNode) XXX_DiscardUnknown() {
	xxx_messageInfo_ParameterNode.DiscardUnknown(m)
}

var xxx_messageInfo_ParameterNode proto.InternalMessageInfo

func (m *ParameterNode) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func init() {
	proto.RegisterType((*Node)(nil), "cloudproud.lunodb.kit.plan.v1.Node")
	proto.RegisterType((*ColumnNode)(nil), "cloudproud.lunodb.kit.plan.v1.ColumnNode")
	proto.RegisterType((*FilterNode)(nil), "cloudproud.lunodb.kit.plan.v1.FilterNode")
	proto.RegisterType((*FunctionNode)(nil), "cloudproud.lunodb.kit.plan.v1.FunctionNode")
	proto.RegisterType((*AggregationNode)(nil), "cloudproud.lunodb.kit.plan.v1.AggregationNode")
	proto.RegisterType((*AndExpressionNode)(nil), "cloudproud.lunodb.kit.plan.v1.AndExpressionNode")
	proto.RegisterType((*OrExpressionNode)(nil), "cloudproud.lunodb.kit.plan.v1.OrExpressionNode")
	proto.RegisterType((*BinaryExpressionNode)(nil), "cloudproud.lunodb.kit.plan.v1.BinaryExpressionNode")
	proto.RegisterType((*CastExpression)(nil), "cloudproud.lunodb.kit.plan.v1.CastExpression")
	proto.RegisterType((*ComparisonExpressionNode)(nil), "cloudproud.lunodb.kit.plan.v1.ComparisonExpressionNode")
	proto.RegisterType((*ConstantNode)(nil), "cloudproud.lunodb.kit.plan.v1.ConstantNode")
	proto.RegisterType((*OrderByNode)(nil), "cloudproud.lunodb.kit.plan.v1.OrderByNode")
	proto.RegisterType((*OrderExpressionNode)(nil), "cloudproud.lunodb.kit.plan.v1.OrderExpressionNode")
	proto.RegisterType((*TupleNode)(nil), "cloudproud.lunodb.kit.plan.v1.TupleNode")
	proto.RegisterType((*VariableExpression)(nil), "cloudproud.lunodb.kit.plan.v1.VariableExpression")
	proto.RegisterType((*ParameterNode)(nil), "cloudproud.lunodb.kit.plan.v1.ParameterNode")
}

func init() { proto.RegisterFile("kit/plan/plan.proto", fileDescriptor_f3b98472bff7aeef) }

var fileDescriptor_f3b98472bff7aeef = []byte{
	// 1119 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x97, 0x41, 0x6f, 0xdc, 0x44,
	0x14, 0xc7, 0x6b, 0xc7, 0xd9, 0xec, 0xbe, 0x4d, 0xd2, 0x76, 0xb2, 0xad, 0x4c, 0x44, 0x45, 0x6a,
	0x40, 0xa4, 0x50, 0x76, 0x9b, 0xf4, 0x50, 0x58, 0x24, 0x24, 0x76, 0x09, 0x6d, 0x49, 0xa0, 0x2b,
	0xb7, 0x8a, 0x00, 0x45, 0x44, 0x63, 0x7b, 0x76, 0x63, 0xc5, 0x3b, 0x63, 0x8d, 0xc7, 0x51, 0xf6,
	0xc6, 0x05, 0x90, 0x38, 0xd0, 0x2f, 0xc0, 0x89, 0x23, 0x37, 0xbe, 0x06, 0x1f, 0x80, 0x23, 0x87,
	0x1e, 0xb9, 0xf1, 0x0d, 0xd0, 0x8c, 0xed, 0xb5, 0x37, 0x9b, 0xc4, 0x9b, 0x50, 0x89, 0x5e, 0x56,
	0x3b, 0xcf, 0xef, 0xff, 0x9b, 0x79, 0xcf, 0x33, 0x6f, 0x9e, 0x61, 0xe5, 0xd0, 0x17, 0xad, 0x30,
	0xc0, 0x54, 0xfd, 0x34, 0x43, 0xce, 0x04, 0x43, 0xb7, 0xdc, 0x80, 0xc5, 0x5e, 0xc8, 0x59, 0xec,
	0x35, 0x83, 0x98, 0x32, 0xcf, 0x69, 0x1e, 0xfa, 0xa2, 0xa9, 0x3c, 0x8e, 0x36, 0x56, 0x1b, 0x03,
	0x36, 0x60, 0xca, 0xb3, 0x25, 0xff, 0x25, 0xa2, 0x55, 0x45, 0xa2, 0xcc, 0x23, 0xea, 0x27, 0x35,
	0xde, 0x90, 0x46, 0x31, 0x0a, 0x49, 0x94, 0xfc, 0x26, 0x66, 0xeb, 0x79, 0x0d, 0x8c, 0x2f, 0x99,
	0x47, 0x50, 0x17, 0x2a, 0x2e, 0x0b, 0xe2, 0x21, 0x35, 0xf5, 0x35, 0x6d, 0xbd, 0xbe, 0x79, 0xa7,
	0x79, 0xee, 0xd4, 0xcd, 0xae, 0x72, 0x96, 0xd2, 0x47, 0x57, 0xec, 0x54, 0x2a, 0x21, 0x7d, 0x3f,
	0x10, 0x84, 0x9b, 0x73, 0x33, 0x41, 0x3e, 0x53, 0xce, 0x19, 0x24, 0x91, 0xa2, 0xc7, 0x50, 0xed,
	0xc7, 0xd4, 0x15, 0x3e, 0xa3, 0xa6, 0xa1, 0x30, 0xef, 0x95, 0x61, 0x52, 0xf7, 0x14, 0x34, 0x96,
	0x23, 0x1b, 0xea, 0x78, 0x30, 0xe0, 0x64, 0x80, 0x15, 0x6d, 0x5e, 0xd1, 0x9a, 0x25, 0xb4, 0x4f,
	0x72, 0x45, 0x0a, 0x2c, 0x42, 0xd0, 0xd7, 0xb0, 0x8c, 0xa9, 0xb7, 0x4f, 0x8e, 0x43, 0x4e, 0xa2,
	0x48, 0x62, 0x17, 0x14, 0xf6, 0x5e, 0x19, 0x96, 0x7a, 0x5b, 0x63, 0x4d, 0x0a, 0x5e, 0xc2, 0x45,
	0x23, 0xda, 0x85, 0x25, 0xc6, 0x8b, 0xe4, 0xaa, 0x22, 0xb7, 0x4a, 0xc8, 0x4f, 0xf8, 0x14, 0x78,
	0x91, 0x15, 0x6c, 0x88, 0xc2, 0x0d, 0x97, 0x0d, 0x43, 0xcc, 0xfd, 0x88, 0xd1, 0x22, 0xbf, 0xa6,
	0xf8, 0x0f, 0x4a, 0x5f, 0x75, 0xa6, 0x9d, 0x9a, 0xa7, 0xe1, 0x9e, 0xf2, 0x0c, 0x39, 0x70, 0xdd,
	0xf1, 0x29, 0xe6, 0xa3, 0xe2, 0x5c, 0xa0, 0xe6, 0xba, 0x5f, 0x32, 0x57, 0x47, 0xe9, 0xa6, 0xe6,
	0xb9, 0xe6, 0x9c, 0xb0, 0xa3, 0xaf, 0xe0, 0xaa, 0x8b, 0x23, 0x51, 0x9c, 0xa1, 0xae, 0x66, 0x78,
	0xbf, 0x2c, 0x1a, 0x1c, 0x89, 0x9c, 0xf3, 0xe8, 0x8a, 0xbd, 0xec, 0x4e, 0x58, 0xe4, 0xfe, 0x73,
	0x19, 0x8d, 0x04, 0xa6, 0xc2, 0x5c, 0x9a, 0x69, 0xff, 0x75, 0x53, 0xf7, 0x6c, 0xff, 0x65, 0x72,
	0xd4, 0x81, 0x8a, 0x88, 0xc3, 0xc3, 0x80, 0x98, 0x48, 0x81, 0xd6, 0x4b, 0x40, 0xcf, 0xe2, 0x30,
	0x20, 0xd9, 0x71, 0x48, 0x94, 0xe8, 0x09, 0x54, 0x8f, 0x30, 0xf7, 0xb1, 0x13, 0x10, 0x73, 0x45,
	0x51, 0x36, 0x4a, 0x28, 0xbb, 0xa9, 0xfb, 0x44, 0x94, 0x63, 0x08, 0x7a, 0x08, 0x55, 0xc6, 0x3d,
	0xc2, 0xf7, 0x9d, 0x91, 0xd9, 0x50, 0xc0, 0x77, 0x4b, 0x37, 0x98, 0x47, 0x78, 0x67, 0x94, 0x2e,
	0x6c, 0x81, 0x25, 0x43, 0xb4, 0x03, 0xb5, 0x10, 0x73, 0x3c, 0x24, 0xf2, 0xc0, 0xbf, 0xa6, 0x48,
	0x77, 0x4b, 0x48, 0xbd, 0xcc, 0x3f, 0x65, 0xe5, 0x80, 0x4e, 0x05, 0x0c, 0xe9, 0x65, 0x7d, 0xa7,
	0x03, 0xe4, 0xc5, 0x05, 0xdd, 0x04, 0xdd, 0xf7, 0x4c, 0x6d, 0x4d, 0x5b, 0x37, 0x3a, 0x95, 0x17,
	0x7f, 0xbd, 0xa1, 0x3f, 0xfe, 0xd4, 0xd6, 0x7d, 0x0f, 0x21, 0x30, 0x28, 0x1e, 0x12, 0x55, 0xad,
	0x6a, 0xb6, 0xfa, 0x8f, 0x1a, 0x30, 0x2f, 0x54, 0x9e, 0xe6, 0x94, 0x31, 0x19, 0xa0, 0x9b, 0x50,
	0x89, 0xdc, 0x03, 0x32, 0xc4, 0xaa, 0x9a, 0xd4, 0xec, 0x74, 0x84, 0x4c, 0x58, 0x70, 0xb1, 0xc0,
	0x01, 0x1b, 0xa8, 0xc2, 0x50, 0xb3, 0xb3, 0x21, 0x7a, 0x00, 0x86, 0xac, 0x9c, 0x66, 0x45, 0xc5,
	0xf4, 0x66, 0x49, 0x4c, 0x72, 0x99, 0xb6, 0x12, 0xa0, 0x2d, 0xa8, 0xb1, 0x90, 0x70, 0x2c, 0x18,
	0x8f, 0xcc, 0x85, 0xb5, 0xb9, 0xf5, 0xfa, 0xe6, 0x3b, 0x67, 0xa8, 0x55, 0x69, 0x96, 0xb9, 0x4d,
	0xfd, 0xed, 0x5c, 0x69, 0xfd, 0xa4, 0x01, 0xe4, 0xa5, 0x11, 0x75, 0x01, 0x5c, 0x46, 0x3d, 0x5f,
	0x96, 0x9f, 0x48, 0xa5, 0x62, 0xc6, 0x45, 0x15, 0x64, 0x32, 0xa6, 0x3e, 0x67, 0xc3, 0xb4, 0xba,
	0xcf, 0x16, 0x93, 0x14, 0x58, 0xdf, 0x6b, 0xb0, 0x58, 0x2c, 0xb0, 0x68, 0x0b, 0xea, 0xf9, 0xa1,
	0x93, 0xeb, 0x99, 0x9b, 0x15, 0x58, 0xd4, 0x9d, 0xfa, 0x02, 0x57, 0xa1, 0xea, 0xf9, 0x91, 0xf0,
	0xa9, 0x2b, 0xd4, 0x3b, 0xac, 0xda, 0xe3, 0xb1, 0xf5, 0xb3, 0x0e, 0x57, 0x4f, 0x94, 0xe6, 0x71,
	0x50, 0xda, 0x05, 0x83, 0x42, 0x1f, 0x43, 0x75, 0xc0, 0x59, 0x1c, 0xca, 0x33, 0xa0, 0xcf, 0x1e,
	0xc0, 0x82, 0x12, 0x75, 0x46, 0xe8, 0x23, 0xa8, 0x1c, 0xe0, 0x23, 0x9f, 0x0e, 0xd2, 0x8b, 0x6e,
	0x26, 0x75, 0x2a, 0x39, 0x99, 0x40, 0xe3, 0x72, 0x09, 0xb4, 0x7e, 0xd4, 0xe0, 0xfa, 0xd4, 0xa5,
	0x22, 0x53, 0x12, 0x90, 0xbe, 0xb8, 0x50, 0x4a, 0xa4, 0x00, 0x7d, 0x08, 0xf3, 0xdc, 0x1f, 0x1c,
	0x88, 0x8b, 0xec, 0x90, 0x44, 0x61, 0xfd, 0xa0, 0xc1, 0xb5, 0x93, 0x97, 0xd0, 0xff, 0xb2, 0x90,
	0x3f, 0x35, 0x68, 0x9c, 0x76, 0x83, 0xa0, 0xcf, 0xa1, 0x9a, 0x1d, 0x2f, 0xb5, 0xa0, 0xe5, 0x33,
	0xbb, 0x80, 0xec, 0x5c, 0x26, 0x98, 0xa7, 0x02, 0x0b, 0x32, 0x24, 0x54, 0xd8, 0x63, 0xfd, 0x38,
	0x30, 0xfd, 0xd2, 0x81, 0xcd, 0x5d, 0x38, 0xb0, 0xe7, 0x1a, 0x2c, 0x4f, 0x5e, 0x5c, 0xe8, 0x03,
	0x30, 0x64, 0x23, 0x97, 0xe6, 0xf7, 0xad, 0x33, 0x60, 0x49, 0xaf, 0x27, 0xaf, 0x96, 0x51, 0x48,
	0x6c, 0xa5, 0x90, 0xf5, 0xa4, 0x70, 0x6b, 0x5e, 0x20, 0x8c, 0x82, 0xcc, 0xfa, 0x5d, 0x07, 0xf3,
	0xac, 0xc6, 0x00, 0xed, 0x4c, 0xa5, 0xfb, 0xde, 0x8c, 0x65, 0xf0, 0x15, 0x49, 0x38, 0x7a, 0x0a,
	0x8b, 0x51, 0xec, 0xec, 0x8f, 0xa3, 0x30, 0x2e, 0x19, 0x45, 0x3d, 0x8a, 0x9d, 0xcc, 0x6a, 0x7d,
	0x0b, 0x8b, 0xc5, 0x56, 0xe1, 0x3f, 0xbc, 0xc2, 0x06, 0xcc, 0x1f, 0xe1, 0x20, 0x4e, 0xaa, 0xe7,
	0xa2, 0x9d, 0x0c, 0xac, 0x5f, 0x34, 0xa8, 0x17, 0xee, 0xea, 0xcb, 0x97, 0xc7, 0x67, 0x93, 0x15,
	0x2a, 0xa9, 0x90, 0x9b, 0xb3, 0x74, 0x09, 0x93, 0x1b, 0x61, 0xb2, 0x60, 0x1d, 0xc3, 0xca, 0x29,
	0x3e, 0xe8, 0x75, 0xa8, 0x79, 0x3e, 0x27, 0x49, 0xc3, 0x2f, 0x97, 0xba, 0x64, 0xe7, 0x86, 0x97,
	0xb3, 0x59, 0x6d, 0xa8, 0x8d, 0x5b, 0xab, 0x97, 0x74, 0x7f, 0x59, 0x77, 0x01, 0x4d, 0x37, 0x5a,
	0xb2, 0xd9, 0x60, 0xfd, 0x7e, 0x44, 0x92, 0xba, 0x67, 0xd8, 0xe9, 0xc8, 0x7a, 0x1b, 0x96, 0x26,
	0x7a, 0x1f, 0xf9, 0x06, 0x7d, 0xea, 0x91, 0xe3, 0x34, 0xe2, 0x64, 0xd0, 0xf9, 0x47, 0x83, 0xdb,
	0x2e, 0x1b, 0x9e, 0xbf, 0x98, 0x4e, 0xad, 0x17, 0x60, 0xda, 0x93, 0xdf, 0x6f, 0x3d, 0xed, 0x9b,
	0xf5, 0x81, 0x2f, 0x0e, 0x62, 0xa7, 0xe9, 0xb2, 0x61, 0x2b, 0x97, 0xb5, 0x52, 0x59, 0xe8, 0xb4,
	0xb2, 0xef, 0xca, 0x5f, 0x75, 0xa3, 0xbb, 0xb3, 0xdd, 0xfb, 0x4d, 0xbf, 0xd5, 0xcd, 0xe9, 0x3b,
	0x89, 0xdb, 0xb6, 0x2f, 0x9a, 0x12, 0xda, 0xdc, 0xdd, 0xf8, 0xa3, 0xf8, 0x7c, 0x2f, 0x79, 0xbe,
	0xb7, 0xed, 0x8b, 0x3d, 0xf9, 0x7c, 0x6f, 0x77, 0xe3, 0x85, 0x7e, 0xe7, 0xdc, 0xe7, 0x7b, 0x0f,
	0x7b, 0x9d, 0x2f, 0x88, 0xc0, 0x1e, 0x16, 0xf8, 0x6f, 0xfd, 0x76, 0xee, 0xdb, 0x6e, 0x27, 0xce,
	0xed, 0xf6, 0xb6, 0x2f, 0xda, 0x6d, 0xe9, 0xde, 0x6e, 0xef, 0x6e, 0x38, 0x15, 0xf5, 0x25, 0x7a,
	0xff, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x97, 0xad, 0xb1, 0x21, 0x01, 0x0f, 0x00, 0x00,
}
