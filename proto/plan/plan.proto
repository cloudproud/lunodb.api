syntax = "proto3";
package cloudproud.lunodb.connector.plan.v1;

import "gogoproto/gogo.proto";
import "proto/node/node.proto";
import "proto/types/types.proto";

option go_package = "github.com/cloudproud/lunodb.pb/proto/plan";

message Literal {
  repeated Expression columns = 1;
  From from = 2;
  FilterExpression filter = 3;
  Aggregation aggregation = 4;
  OrderBy order_by = 5;
}

message From {
  string table = 1;
  string schema = 2;
}

message Expression {
  oneof statement {
    Column column = 1;
    Function function = 2;
    BinaryExpression binary_expression = 3;
    Constant constant = 4;
    Tuple tuple = 5;
    VariableExpression variable = 6;
    Parameter parameter = 7;
    CastExpression cast_expression = 8;
  }
}

message Column {
  string name = 1;
  string table = 2;
  string schema = 3;
  string catalog = 4;
}

message FilterExpression {
  oneof condition {
    Expression expression = 1;
    AndExpression and_expression = 2;
    OrExpression or_expression = 3;
    ComparisonExpression comparison_expression = 4;
  }
}

message Function {
  repeated Expression expressions = 1;
  string name = 2;
  bool distinct = 3;
}

message Aggregation {
  repeated Expression group_by = 1;
  Expression having = 2;
  repeated Expression expressions = 3;
}

message AndExpression {
  FilterExpression left = 1;
  FilterExpression right = 2;
}

message OrExpression {
  FilterExpression left = 1;
  FilterExpression right = 2;
}

message ComparisonExpression {
  node.v1.OperatorStatement operator = 1;
  FilterExpression left = 2;
  FilterExpression right = 3;
  node.v1.OperatorStatement sub_operator = 4;
}

message BinaryExpression {
  node.v1.BinaryStatement operator = 1;
  Expression left = 2;
  Expression right = 3;
}

message CastExpression {
  types.v1.Type type = 1;
  Expression expression = 2;
}

message Constant {
  types.v1.Type type = 1;
  bytes value = 2;
}

message OrderBy {
  repeated OrderExpression expressions = 1;
}

message OrderExpression {
  uint32 direction = 1;
  Expression expression = 2;
}

message Tuple {
  repeated Expression expressions = 1;
}

message VariableExpression {
  uint64 offset = 1;
}

message Parameter {
  uint32 index = 1;
}
